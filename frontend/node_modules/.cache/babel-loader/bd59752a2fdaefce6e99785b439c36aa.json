{"ast":null,"code":"var _jsxFileName = \"/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react'; // const http = require(\"http\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\";\nconst DEL_API = \"del-task\";\nconst ADD_API = \"add-task\";\nconst EDIT_API = \"edit-item\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checklist, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n;\n\nfunction Checklist(props) {\n  _s();\n\n  const [listItems, setListItems] = useState(props.listItems ? props.listItems : []);\n\n  async function initListItems() {\n    // setLoading(true);\n    console.log(\"initListItems\");\n    fetch(BACKEND_URL + GET_API).then(response => response.json()).then(response => {\n      setListItems(response);\n      console.log(\"initListItems response was\", response); // setLoading(false);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    initListItems();\n  }, [props.listItems]);\n\n  function rerender() {\n    console.log(\"trying to rerender\");\n    initListItems();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"checklist\",\n    children: [listItems.map(listItem => /*#__PURE__*/_jsxDEV(ListItem, {\n      item: listItem,\n      rerender: rerender\n    }, listItem.item_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(AddListItemForm, {\n        rerender: rerender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checklist, \"XC1o0c/cOoLfY9gVKEqXr6748Ao=\");\n\n_c2 = Checklist;\n\nfunction ListItem(props) {\n  _s2();\n\n  const [completed, setCompleted] = useState(props.item.completed);\n  useEffect(() => {\n    console.log(\"setting completed\", completed);\n    setCompleted(completed);\n    console.log(\"after setting completed\", completed);\n  }, []); //\n\n  async function handleCheckbox(event) {\n    console.log(\"checkbox clicked, completed is currently\", completed);\n    console.log(\"event is\", event);\n\n    if (completed == 1) {\n      setCompleted(0);\n      console.log(\"item started completed--completed is now\", completed);\n    } else {\n      setCompleted(1);\n      console.log(\"item started uncompleted--completed is now\", completed);\n    }\n\n    console.log(\"value of completed before requestOptions\", completed); // if( completed === 0 ) {\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        do: \"update_completed\",\n        item_id: props.item.item_id,\n        completed: completed\n      })\n    };\n    console.log(\"before handleCheckbox response\");\n    let response = await fetch(BACKEND_URL + EDIT_API, requestOptions);\n    console.log(\"handleCheckbox response was \", response);\n    console.log(\"value of completed at end of handleCheckbox\", completed); // props.rerender();\n    // console.log(\"updated database to reflect completed (probably):\", completed);\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), props.item.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ListItem, \"23BjJP/hiuqtPG2Ji3turoDa+qM=\");\n\n_c3 = ListItem;\n\nfunction AddListItemForm(props) {\n  _s3();\n\n  const [newListItemName, setNewListItemName] = useState(\"\"); // const [addNewItem, setAddNewItem] = useState();\n\n  useEffect(() => {\n    setNewListItemName(\"\");\n  }, []);\n\n  const onChange = event => setNewListItemName(event.target.value);\n\n  const submitOnEnter = event => {\n    if (event.key === \"Enter\") handleSubmit();\n  };\n\n  async function handleSubmit(event) {\n    console.log(\"handleSubmit\", event);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newListItemName\n      })\n    };\n    let response = await fetch(BACKEND_URL + ADD_API, requestOptions);\n    props.rerender();\n    setNewListItemName(\"\");\n    console.log(\"list item added:\", newListItemName, \"response:\", response);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newListItemName,\n      id: \"listItemInput\",\n      onChange: onChange,\n      onKeyPress: submitOnEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \" Add Item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(AddListItemForm, \"bkaM5fF+wrSEbT3RYRGoj8XXk4Y=\");\n\n_c4 = AddListItemForm;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Checklist\");\n$RefreshReg$(_c3, \"ListItem\");\n$RefreshReg$(_c4, \"AddListItemForm\");","map":{"version":3,"names":["React","useState","useEffect","BACKEND_URL","GET_API","DEL_API","ADD_API","EDIT_API","App","Checklist","props","listItems","setListItems","initListItems","console","log","fetch","then","response","json","rerender","map","listItem","item_id","ListItem","completed","setCompleted","item","handleCheckbox","event","requestOptions","method","headers","body","JSON","stringify","do","name","AddListItemForm","newListItemName","setNewListItemName","onChange","target","value","submitOnEnter","key","handleSubmit"],"sources":["/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// const http = require(\"http\");\n\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\";\nconst DEL_API = \"del-task\";\nconst ADD_API = \"add-task\";\nconst EDIT_API = \"edit-item\"\n\nfunction App() {\n\n  return (\n    <div>\n      <Checklist  />\n    </div>\n  );\n};\n\nfunction Checklist(props) {\n  const [listItems, setListItems] = useState(props.listItems ? props.listItems : []);\n\n  async function initListItems() {\n    // setLoading(true);\n    console.log(\"initListItems\");\n    fetch(BACKEND_URL + GET_API)\n      .then(response => response.json())\n      .then(response => {\n          setListItems (response);\n          console.log(\"initListItems response was\", response);\n          // setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    initListItems();\n  }, [props.listItems]);\n\n  function rerender() {\n    console.log(\"trying to rerender\");\n    initListItems();\n  };\n\n  return (\n    <ul className = \"checklist\">\n      {listItems.map((listItem) =>\n        <ListItem key={listItem.item_id} item={listItem} rerender={rerender} />\n      )}\n      <li><AddListItemForm rerender={rerender} /></li>\n    </ul>\n  );\n}\n\nfunction ListItem(props) {\n  const [completed, setCompleted] = useState(props.item.completed);\n\n  useEffect(() => {\n    console.log(\"setting completed\", completed);\n    setCompleted(completed);\n    console.log(\"after setting completed\", completed);\n  }, []);\n//\n\n  async function handleCheckbox ( event ) {\n    console.log(\"checkbox clicked, completed is currently\", completed);\n    console.log(\"event is\", event);\n    if( completed == 1 ) {\n      setCompleted(0);\n      console.log(\"item started completed--completed is now\", completed);\n    } else {\n      setCompleted(1);\n      console.log(\"item started uncompleted--completed is now\", completed);\n    }\n    console.log(\"value of completed before requestOptions\", completed);\n    // if( completed === 0 ) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          do: \"update_completed\",\n          item_id: props.item.item_id,\n          completed: completed,\n           })\n      };\n      console.log(\"before handleCheckbox response\");\n      let response = await fetch(BACKEND_URL + EDIT_API, requestOptions);\n      console.log(\"handleCheckbox response was \", response);\n      console.log(\"value of completed at end of handleCheckbox\", completed);\n      // props.rerender();\n\n      // console.log(\"updated database to reflect completed (probably):\", completed);\n    // }\n  } \n\n  return (\n    <li>\n      <input type=\"checkbox\" checked={completed} onChange={handleCheckbox} />\n      {props.item.name}\n      </li>\n  );\n}\n\nfunction AddListItemForm(props) {\n  const [newListItemName, setNewListItemName] = useState(\"\");\n  // const [addNewItem, setAddNewItem] = useState();\n\n  useEffect(() => {\n    setNewListItemName(\"\");\n  }, []);\n\n  const onChange = event => setNewListItemName(event.target.value);\n  const submitOnEnter = event => { if( event.key === \"Enter\" ) handleSubmit(); }\n\n  async function handleSubmit( event ) {\n    console.log(\"handleSubmit\", event);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: newListItemName })\n    };\n\n    let response = await fetch(BACKEND_URL + ADD_API, requestOptions);\n    props.rerender();\n    setNewListItemName(\"\");\n\n    console.log(\"list item added:\", newListItemName, \"response:\", response);\n  }\n\n  return (\n    <>\n      <input type=\"text\" value={newListItemName} id=\"listItemInput\"\n        onChange={ onChange } onKeyPress={ submitOnEnter }/>\n      <button onClick={handleSubmit}> Add Item </button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}