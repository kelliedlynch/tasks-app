{"ast":null,"code":"var _jsxFileName = \"/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react'; // const http = require(\"http\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\";\nconst DEL_API = \"del-task\"; // const demo_tasks = [\n//   { id: 0, name: \"task number one\", completed: 0 },\n//   { id: 1, name: \"task number two\", completed: 0 },\n//   { id: 2, name: \"task number three\", completed: 0 },\n//   { id: 3, name: \"task number four\", completed: 0 },\n// ];\n// const live_tasks = () => {\n// const data = fetch(BACKEND_URL + GET_API)\n// let live_tasks = []\n// fetch(BACKEND_URL + GET_API)\n//     .then(response => response.json())\n//     .then(data => {\n//       live_tasks = data;\n//       // console.log(\"data\", data);\n//     });\n// console.log(live_tasks);\n// console.log(data);\n// return data.result;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const initTasks = async () => {\n      setLoading(true);\n      const response = await fetch(BACKEND_URL + GET_API).then(response => response.json()).then(response => {\n        console.log(response);\n      }); // const resJson = await response.json();\n      // console.log(\"resJson\", resJson);\n\n      setTasks(response);\n      setLoading(false);\n    };\n\n    initTasks();\n  }, []); // setLoading(true);\n  // const finalResponse = await fetch(BACKEND_URL + GET_API)\n  //   .then(response => response.json())\n  //   .then(response => {\n  //     setTasks(response.result);\n  //     return response.result;\n  //     console.log(\"response.result\", response.result);\n  //   });\n  // const response = await fetch(BACKEND_URL + GET_API);\n  // const resJson = response.json();\n  // const result = resJson.result;\n  // console.log(\"response is\", response.json());\n  // setTasks(response);\n  // setLoading(false);\n  // };\n  // initTasks();\n  //   return;\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Checklist, {\n      listItems: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6kiucmQzARcVgBGef7dZ1u2zu/s=\");\n\n_c = App;\n\nfunction Checklist(props) {\n  // const [listItems, setListItems] = useState(props.listItems);\n  // useEffect(() => {\n  //   setListItems(props.listItems);\n  // }, [props.listItems]);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"taskList\",\n    children: props.listItems.map(listItem => /*#__PURE__*/_jsxDEV(ListItem, {\n      item: listItem\n    }, listItem.taskid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Checklist;\n\nfunction ListItem(props) {\n  _s2();\n\n  const [completed, setCompleted] = useState(props.item.completed);\n  useEffect(() => {\n    setCompleted(props.item.completed);\n  }, [props.item.completed]); //\n\n  function handleCheckbox() {\n    console.log(\"checkbox clicked\");\n\n    if (completed === 0) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          taskid: props.item.taskid\n        })\n      };\n      fetch(BACKEND_URL + DEL_API, requestOptions).then(setCompleted(1));\n    } else if (completed === 1) {\n      setCompleted(0);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: props.item.completed,\n      onClick: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), props.item.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ListItem, \"23BjJP/hiuqtPG2Ji3turoDa+qM=\");\n\n_c3 = ListItem;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Checklist\");\n$RefreshReg$(_c3, \"ListItem\");","map":{"version":3,"names":["React","useState","useEffect","BACKEND_URL","GET_API","DEL_API","App","loading","setLoading","tasks","setTasks","initTasks","response","fetch","then","json","console","log","Checklist","props","listItems","map","listItem","taskid","ListItem","completed","setCompleted","item","handleCheckbox","requestOptions","method","headers","body","JSON","stringify","name"],"sources":["/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// const http = require(\"http\");\n\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\";\nconst DEL_API = \"del-task\";\n\n// const demo_tasks = [\n//   { id: 0, name: \"task number one\", completed: 0 },\n//   { id: 1, name: \"task number two\", completed: 0 },\n//   { id: 2, name: \"task number three\", completed: 0 },\n//   { id: 3, name: \"task number four\", completed: 0 },\n// ];\n\n// const live_tasks = () => {\n  // const data = fetch(BACKEND_URL + GET_API)\n// let live_tasks = []\n\n// fetch(BACKEND_URL + GET_API)\n//     .then(response => response.json())\n//     .then(data => {\n//       live_tasks = data;\n//       // console.log(\"data\", data);\n//     });\n// console.log(live_tasks);\n    // console.log(data);\n    // return data.result;\n\n\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n\n  useEffect(() => {\n    const initTasks = async () => {\n      setLoading(true);\n      const response = await fetch(BACKEND_URL + GET_API)\n        .then(response => response.json())\n        .then(response => {\n          console.log(response)\n        })\n      // const resJson = await response.json();\n      // console.log(\"resJson\", resJson);\n\n      setTasks(response);\n      setLoading(false);\n    }\n    initTasks();\n  }, []);\n\n\n\n\n      // setLoading(true);\n      // const finalResponse = await fetch(BACKEND_URL + GET_API)\n      //   .then(response => response.json())\n      //   .then(response => {\n      //     setTasks(response.result);\n      //     return response.result;\n      //     console.log(\"response.result\", response.result);\n      //   });\n      // const response = await fetch(BACKEND_URL + GET_API);\n      // const resJson = response.json();\n      // const result = resJson.result;\n      // console.log(\"response is\", response.json());\n      // setTasks(response);\n      // setLoading(false);\n    // };\n    // initTasks();\n  //   return;\n  // }, []);\n\n\n\n  return (\n    <div>\n    <h1>test</h1>\n    {loading ? (\n      <h4>Loading...</h4>) :\n      <Checklist listItems={tasks} />\n  }\n  </div>\n  );\n}\n\n\n\n\n\nfunction Checklist(props) {\n  // const [listItems, setListItems] = useState(props.listItems);\n\n  // useEffect(() => {\n  //   setListItems(props.listItems);\n  // }, [props.listItems]);\n  console.log(props);\n\n\n  return (\n    <ul className = \"taskList\">\n      {props.listItems.map((listItem) =>\n        <ListItem key={listItem.taskid} item={listItem} />\n      )}\n    </ul>\n  );\n}\n\n\n\nfunction ListItem(props) {\n  const [completed, setCompleted] = useState(props.item.completed);\n\n  useEffect(() => {\n    setCompleted(props.item.completed);\n  }, [props.item.completed]);\n//\n\n  function handleCheckbox () {\n    console.log(\"checkbox clicked\");\n    if( completed === 0 ) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ taskid: props.item.taskid })\n      };\n      fetch(BACKEND_URL + DEL_API, requestOptions)\n      .then(setCompleted(1))\n\n    } else if( completed === 1 ) {\n      setCompleted(0);\n    }\n  } \n\n  return (\n    <li>\n      <input type=\"checkbox\" value={props.item.completed} onClick={handleCheckbox} />\n      {props.item.name}\n      </li>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}