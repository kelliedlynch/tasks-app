{"ast":null,"code":"var _jsxFileName = \"/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react'; // const http = require(\"http\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\"; // const DEL_API = \"del-task\";\n\nconst ADD_API = \"add-task\";\nconst EDIT_API = \"edit-item\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Checklist, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n;\n\nfunction Checklist(props) {\n  _s();\n\n  const [listItems, setListItems] = useState(props.listItems ? props.listItems : []);\n\n  async function initListItems() {\n    // setLoading(true);\n    console.log(\"initListItems\");\n    const response = await fetch(BACKEND_URL + GET_API);\n    const rawList = await response.json();\n    const sortedList = sortList(rawList);\n    setListItems(sortedList); // .then(response => response.json())\n    // .then(response => {\n    //     setListItems (response);\n    //     console.log(\"initListItems response was\", response);\n    //     // setLoading(false);\n    // });\n  }\n\n  ; // initListItems();\n\n  useEffect(() => {// setListItems( sortList(listItems) );\n  }, []);\n\n  function sortList(unsortedList) {\n    let incompleteItems = [];\n    let completeItems = [];\n    unsortedList.forEach(item => {\n      if (item.completed === 0) {\n        incompleteItems.push(item);\n      } else {\n        completeItems.push(item);\n      }\n\n      ;\n    });\n    return incompleteItems.concat(completeItems);\n  }\n\n  async function toggleCompleted(item) {\n    if (item.completed === 0) {\n      item.completed = 1;\n    } else {\n      item.completed = 0;\n    }\n\n    ;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        do: \"update_completed\",\n        item_id: item.item_id,\n        completed: item.completed\n      })\n    };\n    await fetch(BACKEND_URL + EDIT_API, requestOptions);\n    let newItems = [...listItems];\n    console.log(\"newItems before update\", newItems);\n    newItems.forEach(thisItem => {\n      if (thisItem.item_id === item.item_id) {\n        thisItem.completed = item.completed;\n      }\n    });\n    console.log(\"newItems after update\", newItems);\n    setListItems(newItems);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"checklist\",\n    children: [listItems.map(listItem => /*#__PURE__*/_jsxDEV(ListItem, {\n      listItem: listItem,\n      toggleCompleted: toggleCompleted\n    }, listItem.item_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(AddListItemForm, {\n        setListItems: setListItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checklist, \"XC1o0c/cOoLfY9gVKEqXr6748Ao=\");\n\n_c2 = Checklist;\n\nfunction ListItem(props) {\n  _s2();\n\n  // const [listItem, setListItem] = useState(props.item);\n  // const [completed, setCompleted] = useState(props.item.completed);\n  // const item_id = props.item.item_id;\n  useEffect(() => {// function completeListItem() {\n    //   const requestOptions = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({\n    //       do: \"update_completed\",\n    //       item_id: listItem.item_id,\n    //       completed: listItem.completed,\n    //        })\n    //     };\n    //     fetch(BACKEND_URL + EDIT_API, requestOptions);\n    // }\n    // completeListItem();\n  }); //\n\n  function handleCheckbox() {\n    props.toggleCompleted(props.listItem); // props.rerender();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.listItem.completed,\n      onChange: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), props.listItem.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ListItem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = ListItem;\n\nfunction AddListItemForm(props) {\n  _s3();\n\n  const [newListItemName, setNewListItemName] = useState(\"\"); // const [addNewItem, setAddNewItem] = useState();\n\n  useEffect(() => {\n    setNewListItemName(\"\");\n  }, []);\n\n  const onChange = event => setNewListItemName(event.target.value);\n\n  const submitOnEnter = event => {\n    if (event.key === \"Enter\") handleSubmit();\n  };\n\n  async function handleSubmit(event) {\n    console.log(\"handleSubmit\", event);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newListItemName\n      })\n    };\n    await fetch(BACKEND_URL + ADD_API, requestOptions);\n    props.rerender();\n    setNewListItemName(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newListItemName,\n      id: \"listItemInput\",\n      onChange: onChange,\n      onKeyPress: submitOnEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \" Add Item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(AddListItemForm, \"bkaM5fF+wrSEbT3RYRGoj8XXk4Y=\");\n\n_c4 = AddListItemForm;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Checklist\");\n$RefreshReg$(_c3, \"ListItem\");\n$RefreshReg$(_c4, \"AddListItemForm\");","map":{"version":3,"names":["React","useState","useEffect","BACKEND_URL","GET_API","ADD_API","EDIT_API","App","Checklist","props","listItems","setListItems","initListItems","console","log","response","fetch","rawList","json","sortedList","sortList","unsortedList","incompleteItems","completeItems","forEach","item","completed","push","concat","toggleCompleted","requestOptions","method","headers","body","JSON","stringify","do","item_id","newItems","thisItem","map","listItem","ListItem","handleCheckbox","name","AddListItemForm","newListItemName","setNewListItemName","onChange","event","target","value","submitOnEnter","key","handleSubmit","rerender"],"sources":["/Users/kellielynch/Documents/src/tasks-app/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n//import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// const http = require(\"http\");\n\nconst BACKEND_URL = \"http://localhost:5000/\";\nconst GET_API = \"tasks\";\n// const DEL_API = \"del-task\";\nconst ADD_API = \"add-task\";\nconst EDIT_API = \"edit-item\"\n\nfunction App() {\n\n  return (\n    <div>\n      <Checklist  />\n    </div>\n  );\n};\n\nfunction Checklist(props) {\n  const [listItems, setListItems] = useState(props.listItems ? props.listItems : []);\n\n  async function initListItems() {\n    // setLoading(true);\n    console.log(\"initListItems\");\n    const response = await fetch(BACKEND_URL + GET_API);\n    const rawList = await response.json();\n    const sortedList = sortList( rawList );\n    setListItems( sortedList );\n\n      // .then(response => response.json())\n      // .then(response => {\n      //     setListItems (response);\n      //     console.log(\"initListItems response was\", response);\n      //     // setLoading(false);\n      // });\n  };\n  // initListItems();\n\n  useEffect(() => {\n    // setListItems( sortList(listItems) );\n  }, []);\n\n  function sortList( unsortedList ) {\n    let incompleteItems = [];\n    let completeItems = [];\n    unsortedList.forEach( item => {\n      if( item.completed === 0 ) {\n        incompleteItems.push(item);\n      } else {\n        completeItems.push(item);\n      };\n    });\n    return incompleteItems.concat(completeItems);\n  }\n\n  async function toggleCompleted( item ) {\n    if( item.completed === 0 ) {\n      item.completed = 1;\n    } else {\n      item.completed = 0;\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        do: \"update_completed\",\n        item_id: item.item_id,\n        completed: item.completed,\n         })\n      };\n      await fetch(BACKEND_URL + EDIT_API, requestOptions);\n      let newItems = [...listItems];\n      console.log(\"newItems before update\", newItems);\n      newItems.forEach(thisItem => {\n        if( thisItem.item_id === item.item_id ) {\n          thisItem.completed = item.completed;\n        }\n      });\n      console.log(\"newItems after update\", newItems);\n      setListItems(newItems);\n  }\n\n  return (\n    <ul className = \"checklist\">\n      {listItems.map((listItem) =>\n        <ListItem key={listItem.item_id} listItem={listItem} toggleCompleted={toggleCompleted} />\n      )}\n      <li><AddListItemForm setListItems={setListItems} /></li>\n    </ul>\n  );\n}\n\nfunction ListItem( props ) {\n  // const [listItem, setListItem] = useState(props.item);\n  // const [completed, setCompleted] = useState(props.item.completed);\n  // const item_id = props.item.item_id;\n\n  useEffect(() => {\n    // function completeListItem() {\n    //   const requestOptions = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({\n    //       do: \"update_completed\",\n    //       item_id: listItem.item_id,\n    //       completed: listItem.completed,\n    //        })\n    //     };\n    //     fetch(BACKEND_URL + EDIT_API, requestOptions);\n    // }\n    // completeListItem();\n  }, );\n//\n\n  function handleCheckbox() {\n    props.toggleCompleted( props.listItem );\n    // props.rerender();\n  }\n\n  return (\n    <li>\n      <input type=\"checkbox\" checked={props.listItem.completed} onChange={handleCheckbox} />\n      {props.listItem.name}\n    </li>\n  );\n}\n\nfunction AddListItemForm(props) {\n  const [newListItemName, setNewListItemName] = useState(\"\");\n  // const [addNewItem, setAddNewItem] = useState();\n\n  useEffect(() => {\n    setNewListItemName(\"\");\n  }, []);\n\n  const onChange = event => setNewListItemName(event.target.value);\n  const submitOnEnter = event => { if( event.key === \"Enter\" ) handleSubmit(); }\n\n  async function handleSubmit( event ) {\n    console.log(\"handleSubmit\", event);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: newListItemName })\n    };\n\n    await fetch(BACKEND_URL + ADD_API, requestOptions);\n    props.rerender();\n    setNewListItemName(\"\");\n\n  }\n\n  return (\n    <>\n      <input type=\"text\" value={newListItemName} id=\"listItemInput\"\n        onChange={ onChange } onKeyPress={ submitOnEnter }/>\n      <button onClick={handleSubmit}> Add Item </button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}